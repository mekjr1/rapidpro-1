dist:
- trusty
sudo:
- false
language: python
python:
- 3.6.4
addons:
  apt:
    packages:
    - postgresql-9.6-postgis-2.3
  postgresql: '9.6'
services:
- redis-server
env:
- ES_VERSION=6.3.1 ES_DOWNLOAD_URL=https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-${ES_VERSION}.tar.gz
cache:
  directories:
  - "$HOME/.cache/pip"
install:
- wget ${ES_DOWNLOAD_URL}
- tar -xzf elasticsearch-${ES_VERSION}.tar.gz
- "./elasticsearch-${ES_VERSION}/bin/elasticsearch &"
- travis_retry pip install --upgrade pip
- pip --version
- travis_retry pip install -r pip-freeze.txt --upgrade
- pip install coveralls
- pip install flake8
- nvm install 6
- nvm use 6
- npm install
- npm run build
before_script:
- wget -q --waitretry=1 --retry-connrefused -T 10 -O - http://127.0.0.1:9200
- psql -U postgres -c "CREATE USER temba WITH PASSWORD 'temba';"
- psql -U postgres -c "ALTER ROLE temba WITH SUPERUSER;"
- psql -d 'template1' -U postgres -c "CREATE EXTENSION postgis;"
- psql -d 'template1' -U postgres -c "CREATE EXTENSION postgis_topology;"
- psql -d 'template1' -U postgres -c "CREATE EXTENSION hstore;"
- psql -U temba postgres -c "CREATE DATABASE temba;"
- ln -s $TRAVIS_BUILD_DIR/temba/settings.py.dev $TRAVIS_BUILD_DIR/temba/settings.py
- GOFLOW_VERSION=0.10.20
- wget https://github.com/nyaruka/goflow/releases/download/v${GOFLOW_VERSION}/goflow_${GOFLOW_VERSION}_linux_amd64.tar.gz
- tar -xvf goflow_${GOFLOW_VERSION}_linux_amd64.tar.gz
- RPINDEXER_VERSION=1.0.22
- wget https://github.com/nyaruka/rp-indexer/releases/download/v${RPINDEXER_VERSION}/rp-indexer_${RPINDEXER_VERSION}_linux_amd64.tar.gz
- tar -xvf rp-indexer_${RPINDEXER_VERSION}_linux_amd64.tar.gz
script:
- set -e
- black --line-length=119 temba --check --quiet || (echo 'The source code could use
  a bit more black.' && exit 1)
- flake8
- python manage.py makemigrations --dry-run | grep 'No changes detected' || (echo
  'There are changes which require migrations.' && exit 1)
- node_modules/karma/bin/karma start karma.conf.coffee --single-run --browsers PhantomJS
- python manage.py collectstatic --noinput --verbosity=0
- (! python manage.py compress --extension=".haml" --settings=temba.settings_compress
  | grep 'Error') || exit 1
- "./flowserver --log-level=warn &"
- jobs
- coverage run manage.py test --settings=temba.settings_travis --noinput --verbosity=2
- set +e
after_success:
- pip install pyopenssl==17.4.0
- coveralls --rcfile .coveragerc_failcheck
- coverage report -i --rcfile .coveragerc
- coverage report -i --rcfile .coveragerc_failcheck --fail-under=100
notifications:
  slack:
    secure: b2/RUpO6gWEDgOI/sEWsjt2cVnwp3hOWUSMnHpVuY0pZBzzrICZ5MeqEulwCoKy+8ohaCmYUL42RzJwq1v2FITo5YDeiLrqmrkYR0Zieel/Vey+o6sBdR6y2yPvWjBmydHNvfUyMshT5iqEn4bS6bjhm57F0rLJX7mTqp19A+68=
deploy:
  provider: gae
  skip_cleanup: true
  keyfile: "$GOOGLECLOUDKEYFILE"
  project: "$GOOGLECLOUDPROJECT"
  default: true
  on:
    all_branches: true
before_install:
- openssl aes-256-cbc -K $encrypted_6d229c7bf97b_key -iv $encrypted_6d229c7bf97b_iv
  -in google-api-service-key-for-travis.json.enc -out google-api-service-key-for-travis.json
  -d
